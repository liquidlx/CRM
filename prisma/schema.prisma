// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique(map: "Users_email_unique_constraint")
  password  String
  createdAt DateTime? @default(now()) @map(name: "created_at")
  updatedAt DateTime? @updatedAt @map(name: "updated_at")
  stores    Stores[]
  role      Role      @default(USER)
  deleted   Boolean   @default(false)

  @@map("users")
}

model Companies {
  id        String    @id @default(uuid())
  name      String
  cnpj      String    @unique(map: "Company_cnpj_unique_constraint")
  createdAt DateTime? @default(now()) @map(name: "created_at")
  stores    Stores[]
  deleted   Boolean   @default(false)

  @@map("companies")
}

model Customers {
  id         String    @id @default(uuid())
  name       String
  email      String    @unique(map: "Customers_email_unique_constraint")
  phone      String
  postalCode String?
  cpf        String?   @unique(map: "Customers_cpf_unique_constraint")
  createdAt  DateTime? @default(now()) @map(name: "created_at")
  updatedAt  DateTime? @updatedAt @map(name: "updated_at")
  sales      Sales[]
  deleted    Boolean   @default(false)

  @@unique([email, phone, cpf])
  @@map("customers")
}

model Sales {
  id          String    @id @default(uuid())
  createdAt   DateTime? @default(now()) @map(name: "created_at")
  price       Float
  Customers   Customers @relation(fields: [customersId], references: [id])
  customersId String
  Sellers     Sellers   @relation(fields: [sellersId], references: [id])
  sellersId   String
  Stores      Stores?   @relation(fields: [storesId], references: [id])
  storesId    String?
  newCustomer Boolean   @default(false)
  deleted     Boolean   @default(false)

  @@map("sales")
}

model Sellers {
  id        String    @id @default(uuid())
  createdAt DateTime? @default(now()) @map(name: "created_at")
  name      String
  email     String
  phone     String
  cpf       String
  sales     Sales[]
  deleted   Boolean    @default(false)

  @@map("sellers")
}

model Stores {
  id          String     @id @default(uuid())
  createdAt   DateTime?  @default(now()) @map(name: "created_at")
  cnpj        String
  name        String
  Users       Users[]
  Companies   Companies? @relation(fields: [companiesId], references: [id]) 
  companiesId String?
  sales       Sales[]
  deleted     Boolean    @default(false)

  @@map("stores")
}

enum Role {
  USER
  ADMIN
}